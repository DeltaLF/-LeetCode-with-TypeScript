import { minCost } from "../2448_Minimum_Cost_to_Make_Array_Equal";
it("finds minCost", () => {
  expect(
    minCost(
      [
        6, 5, 8, 2, 9, 8, 8, 2, 4, 8, 8, 2, 1, 8, 8, 6, 3, 8, 9, 7, 7, 9, 3, 9,
        4, 3, 7, 5, 1, 3, 6, 3, 1, 2, 6,
      ],
      [
        4, 8, 7, 8, 5, 2, 4, 5, 8, 4, 2, 2, 3, 7, 5, 4, 2, 3, 5, 3, 5, 2, 8, 5,
        9, 3, 6, 8, 2, 8, 3, 1, 8, 5, 1,
      ]
    )
  ).toBe(383);
});
it("finds minCost", () => {
  // one
  expect(minCost([1], [1])).toBe(0);
  // two
  expect(minCost([1, 2], [2, 1])).toBe(1);
  expect(minCost([2, 1], [2, 1])).toBe(1);
  expect(minCost([1, 2], [1, 1])).toBe(1);
  expect(minCost([1, 1], [1, 1])).toBe(0);
  expect(minCost([1, 2], [1, 1])).toBe(1);
  // three
  expect(minCost([1, 2, 3], [1, 2, 3])).toBe(4);
  expect(minCost([1, 2, 3], [1, 3, 2])).toBe(3);
  expect(
    minCost(
      [1, 2, 32, 2431, 12, 42, 1, 24, 1243, 21121, 24, 1],
      [1, 2, 2, 24, 12, 2, 1, 24, 1243, 21, 24, 1]
    )
  ).toBe(530266);
  expect(
    minCost(
      [
        1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1,
      ],
      [
        1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1,
      ]
    )
  ).toBe(330);
});
