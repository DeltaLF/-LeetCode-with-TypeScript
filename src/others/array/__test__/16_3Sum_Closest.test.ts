import { threeSumClosest } from "../16_3Sum_Closest";

it("finds the closet three sum", () => {
  expect(threeSumClosest([-1, 2, 1], 1)).toBe(2);

  expect(threeSumClosest([-1, 2, 1], 100)).toBe(2);
  expect(threeSumClosest([-1, 2, 1], -100)).toBe(2);
  expect(threeSumClosest([-1, 2, 1, -4], 1)).toBe(2);

  expect(
    threeSumClosest(
      [
        -1, 2, 1, -4, 4, 50, 1, 20, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30,
        24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4,
        954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67,
        8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11,
        2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24,
        -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30,
        24, 24, -99, 11, 2, 67, 8, 4, 954, 2, 1, -4, 4, 50, 1, 20, 30, 24, 24,
        -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30,
        24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4,
        954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67,
        8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11,
        2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24,
        -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 2, 1,
        -4, 4, 50, 1, 20, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24,
        -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30,
        24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4,
        954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67,
        8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11,
        2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24,
        -99, 11, 2, 67, 8, 4, 954, 2, 1, -4, 4, 50, 1, 20, 30, 24, 24, -99, 11,
        2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24,
        -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30,
        24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4,
        954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67,
        8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954, 30, 24, 24, -99, 11,
        2, 67, 8, 4, 954, 30, 24, 24, -99, 11, 2, 67, 8, 4, 954,
      ],
      9999
    )
  ).toBe(2862);
});
